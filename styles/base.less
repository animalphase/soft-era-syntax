@import "syntax-variables";

.value-shadow {
  text-shadow: 1px 1px 0 fade(@soft-text-dark, 5%),
    1px 1px 0 fade(@soft-text-dark, 5%),
    1px 1px 0 fade(#fff, 100%),
    1px 1px 0 fade(#fff, 100%);
}

atom-text-editor,
.atom-text-editor {
  background-color: @soft-background;
  color: @soft-text;
  // color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-invisible-character-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @soft-background;
    color: @soft-text-faded;

    .line-number {
      &.cursor-line {
        background-color: fade(@soft-purple-light, 50%);
        color: @soft-purple-darker;
      }

      &.cursor-line-no-selection {
        background-color: transparent;
        color: @soft-purple-darker;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-invisible-character-color;
  }

  .cursor {
    color: @syntax-cursor-color;
    border-left: 2px solid @syntax-cursor-color !important;
    border-top: 0;
    border-bottom: 0;
    left: 0px;
  }
  .cursor:after {
    content: '';
    display: block;
    position: absolute;
    left: -1px;
    width: .7em;
    height: 100%;
    background: @syntax-cursor-color;
    opacity: .25;
    -webkit-filter: blur(2px);
    filter: blur(2px);
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

.comment {
  color: @gray;
}

.entity {
  color: @soft-text-emphasis;

  &.name.type {
    color: @morado;
  }

  &.other.inherited-class {
    color: @yellow;
  }
}

.keyword {
  color: @tags;

  &.control {
    color: @soft-blue;
    font-weight: 500;
  }

  &.operator {
    // color: lighten(@orange, 10%);
    color: @soft-hot-pink;
    font-weight: 500;
    // .value-shadow();
  }

  &.other.special-method {
    color: @yellow;
  }

  &.other.unit {
    color: @orange;
  }
}

.storage {
  color: @soft-violet;
}

.constant {
  color: @soft-text-dark;

  &.character.escape {
    color: @soft-text-emphasis;
  }

  &.numeric {
  }

  &.other.color {
    color: @soft-text-emphasis;
  }

  &.other.symbol {
  }
}

.variable {
  /* color: lighten(@orange, 15%); */
  color: @purple;

  &.interpolation {
    color: darken(@orange, 25%);
  }

  &.parameter.function {
    color: @soft-red-faded !important; // prevent parameter definition color from being overwritten by argument colors below
  }
}

.invalid.illegal {
  background-color: @red;
  color: @syntax-background-color;
}

// search/find results
@-webkit-keyframes flash {
  from { background-color: @syntax-selection-flash-color; }
  to { background-color: null; }
}
.editor .current-result .region {
  background-color: transparent;
  // border: 2px solid @syntax-result-marker-color-selected;
  border: none;
}
.editor .find-result .region {
  // border: 2px solid @syntax-result-marker-color;
  border: none;
}
.editor .current-result .region::after,
.editor .find-result .region::after
{
  content: '';
  box-sizing: content-box;
  display: block;
  width: 100%;
  height: 90%;
  border-radius: 4px;
  padding: 0px 0px 0px 1px;
  position: absolute;
  top: -2px;
  left: -2px;
  border: 2px solid @syntax-result-marker-color;
  box-shadow: 1px 1px 0 0 @soft-text;
}
.editor .current-result .region::after {
  border-color: @syntax-result-marker-color-selected;
}
// atom-pane[] .string[not=".syntax--json"] {
// .string:not([class*='.json']) {
// atom-pane:not([data-active-item-name*=".json"]) .string {
// :not(".syntax--key") .string {
.string {
  color: @soft-text-dark;

  &.regexp {
    // color: @soft-text-emphasis;

    .source.ruby.embedded {
      color: @orange;
    }
  }

  &.other.link {
    color: @red;
  }

  // .syntax--js,
  // .syntax--embedded {
  //   color: @soft-text;
  // }
}
.syntax--string {
  // border-bottom: 1px dashed #aaa;
  // border-bottom: 1px dashed #e2e2e2;
}
.syntax--string.syntax--begin,
.syntax--string.syntax--end {
  color: fade(@soft-text-dark, 80%);
  color: inherit !important;
  opacity: .8;
  position: relative;
  font-style: italic;
  // font-weight: 900;
  // border-bottom: 1px dashed #e2e2e2;
  // border-bottom: 1px dashed #ece8e8;
  // border-bottom: 1px solid @soft-background;
  // .value-shadow();
  // text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff,
  //   1px 1px 0 #fff, 2px 2px 0 fade(@soft-text-dark, 5%),
  //   2px 2px 0 fade(@soft-text-dark, 5%);
  // text-shadow:
  //   1px 1px 0 fade(@soft-text-emphasis, 45%);
    // 2px 2px 0 fade(@soft-text-dark, 5%),
    // 2px 2px 0 fade(@soft-text-dark, 5%);

  &::before {
    content: "";
    display: block;
    width: 0;
    height: 0;
    border: .4em solid;
    border-top-color: transparent;
    border-bottom-color: transparent;
    position: absolute;
    top: 20%;
    opacity: .08;
  }
}
.syntax--string.syntax--begin::before {
  border-right: none;
  right: -.1em;
}
.syntax--string.syntax--end::before {
  border-left: none;
  left: -.1em;
}

.syntax--string.syntax--begin {
  // text-shadow:
  //   1px 1px 0 fade(@soft-text-emphasis, 45%);
    // 2px 2px 0 fade(@soft-text-dark, 5%),
    // 2px 2px 0 fade(@soft-text-dark, 5%);
}
.syntax--string.syntax--end {
  // text-shadow:
  //   -1px 1px 0 fade(@soft-text-emphasis, 45%);
    // -2px 2px 0 fade(@soft-text-dark, 5%),
    // -2px 2px 0 fade(@soft-text-dark, 5%);
}

.syntax--unit {
  color: @soft-hot-pink;
  font-weight: 500;
  // .value-shadow();
}


.punctuation[not=".syntax--string.syntax--begin"][not=".syntax--string.syntax--end"] {
  color: @soft-text-faded;
  &.definition {
    &.comment {
      color: @light-gray;
    }

    // &.string,
    // &.variable,
    // &.parameters,
    // &.array {
    //   color: @soft-red;
    // }

    &.heading,
    &.identity {
      color: @cyan;
    }

    &.bold {
      color: @morado;
      font-style: bold;
    }

    &.italic {
      color: @tags;
      font-style: italic;
    }
  }

  &.section.embedded {
    color: darken(@red, 10%);
  }
}

.support {
  &.class {
    color: @morado;
  }

  &.function {
    color: @soft-green;

    &.any-method {
      color: @tags;
    }
  }
}

// arrow function declaration
.syntax--arrow {
  color: @soft-green;
}

// targets the word "function" when declaring a function
.syntax--type.syntax--function.syntax--js:not(.syntax--arrow) {
  font-style: italic;
  color: #98c4ba;
}

.entity {
  &.name.function {
    color: @soft-green;
  }

  &.name.class,
  &.name.type.class,
   {
    color: @soft-purple-darker;
    color: @morado;
  }

  &.name.section {
    color: @yellow;
  }

  &.name.tag {
    color: @tags;
  }

  &.other.attribute-name {
    color: @soft-text-emphasis;

    &.id {
      color: @yellow;
    }
  }
}

.meta {
  &.class {
    color: @morado;
  }

  &.link {
    color: @orange;
  }

  &.require {
    color: @yellow;
  }

  &.selector {
    color: @tags;
  }

  &.separator {
    background-color: @gray;
    color: @soft-text;
  }
}

.none {
  color: @soft-text;
}

.markup {
  &.bold {
    color: @orange;
    font-style: bold;
  }

  &.changed {
    color: @tags;
  }

  &.deleted {
    color: @red;
  }

  &.italic {
    color: @purple;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    color: @cyan;
  }

  &.inserted {
    color: @yellow;
  }

  &.list {
    color: @orange;
  }

  &.quote {
    color: @red;
  }

  &.raw.inline {
    color: @yellow;
  }
}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @yellow;
  }
}

.atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}

.syntax--property {
  color: @soft-violet;
}

//this, super, etc:
// .variable.language.js
.variable.language {
  font-weight: 500;
  color: @soft-purple-default;
}

.syntax--todo,
.syntax--question,
.syntax--note,
.syntax--fixme,
.syntax--changed,
.syntax--xxx,
.syntax--idea,
.syntax--hack,
.syntax--review,
.syntax--xxx {
  color: @soft-orange;
}

.bracket-matcher.region {
  background: none;
  border: none;
}
.bracket-matcher.region::after {
  content: '';
  display: block;
  width: 140%;
  height: 100%;
  // padding: 6px;
  position: relative;
  top: 0px;
  left: -1px;
  box-sizing: border-box;
  border: 2px solid #fff;
  border-radius: 5px;
  background: #fff !important;
  z-index: 1000000;
  // box-shadow: 0px 1px 0px rgba(168, 164, 190, .35),
  //   1px 0px 0px rgba(168, 164, 190, .35), 0px -1px 0px rgba(168, 164, 190, .35),
  //   -1px 0px 0px rgba(168, 164, 190, .35);
  // box-shadow: 0px 1px 0px rgba(255, 255, 255, .3),
  //   1px 0px 0px rgba(255, 255, 255, .3), 0px -1px 0px rgba(255, 255, 255, .3),
  //   -1px 0px 0px rgba(255, 255, 255, .3);
  box-shadow: 1px 0px 0px rgba(168, 164, 190, .35),
    -1px 0px 0px rgba(168, 164, 190, .35);
}

// otherwise unstyled text passed as arguments,
.syntax--variable.syntax--parameter.syntax--function.syntax--js,
atom-text-editor::shadow .meta.arguments.js,
// .syntax--parameter,
.syntax--function.syntax--parameter,
.syntax--variable.syntax--parameter.syntax--function {
  color: @soft-salmon;
}


// punctuation for things passed as arguments
.syntax--variable.syntax--parameter.syntax--function.syntax--js .syntax--brace,
atom-text-editor.editor .syntax--meta.syntax--arguments.syntax--js .syntax--brace,
.syntax--parameter .syntax--brace,
.syntax--arguments .syntax--punctuation, .syntax--function.syntax--parameter .syntax--brace,
.syntax--variable.syntax--parameter.syntax--function .syntax--brace {
  color: @soft-salmon;
}

// targets the curly braces of an empty js object being passed as an arguments
.syntax--arguments .syntax--punctuation:not(.syntax--definition) {
  color: @soft-salmon !important;
}
.syntax--constant.syntax--other {
  color: inherit;
}
.syntax--key,
.syntax--key .string,
.syntax--class {
  color: @morado;
}
.syntax--property-name {
  color: @soft-text-emphasis;
  color: @soft-text-dark;
}
.syntax--value {
  // .syntax--json,
  .syntax--js,
  .syntax--string,
  .syntax--quoted,
  .syntax--single,
  .syntax--double
  {
    color: @soft-text-dark;
  }
}

// style for svg files:
// atom-pane[data-active-item-name*=".svg"] {
//   atom-text-editor,
//   .atom-text-editor {
//     color: @soft-text-emphasis;
//   }
// }
