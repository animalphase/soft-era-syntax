@import "syntax-variables";

.value-shadow {
  text-shadow:
    1px 1px 0 fade(@soft-text-dark, 5%),
    1px 1px 0 fade(@soft-text-dark, 5%),
    1px 1px 0 fade(#fff, 100%),
    1px 1px 0 fade(#fff, 100%);
}

:host, .atom-text-editor {
  background-color: @soft-background;
  color: @soft-text;
}

:host, .atom-text-editor {
  background-color: @soft-background;
  color: @soft-text;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    // color: @syntax-invisible-character-color;
    // color: fade(@soft-text-faded, 50%);
    color: @soft-light-gray;
  }

  .invisible-character {
    // color: @syntax-invisible-character-color;
    // color: fade(@soft-text-faded, 50%);
      color: @soft-light-gray;
  }

  .gutter {
    background-color: @soft-background;
    color: @soft-text-faded;

    .line-number {
      &.cursor-line {
        background-color: fade(@soft-purple-light, 50%);
        color: @soft-purple-darker;
      }

      &.cursor-line-no-selection {
        background-color: transparent;
        color: @soft-purple-darker;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @soft-light-gray;
  }

  .cursor {
    color: @syntax-cursor-color;
    color: rgba(244,129,187,1);
    border-left: 2px solid rgba(244,129,187,1) !important;
    border-top: 0;
    border-bottom: 0;
  }
  .cursor:after {
    content: '';
    display: block;
    position: absolute;
    left: -1px;
    width: .55em;
    height: 100%;
    background: rgba(244,129,187,.13);
    -webkit-filter: blur(1px);
    filter: blur(1px);
  }

  .selection .region {
    background-color: @soft-purple-light;
  }
}

.atom-text-editor .search-results .marker .region {
  background-color: transparent;
  border: 2px solid @syntax-result-marker-color;
}

.atom-text-editor .search-results .marker.current-result .region {
  border: 2px solid @syntax-result-marker-color-selected;
}

.comment {
  color: @gray;
}

.entity {
  // color: @soft-text-emphasis;

  &.name.type {
    color: @morado;

  }

  &.other.inherited-class {
    color: @yellow;
  }
}

.keyword {
  color: @tags;

  &.control {
    color: @soft-blue;
    font-weight: 500;
  }

  &.operator {
    // color: lighten(@orange, 10%);
    color: @soft-hot-pink;
    font-weight: 500;
    // .value-shadow();
  }

  &.other.special-method {
    color: @yellow;
  }

  &.other.unit {
    color: @orange;
  }
}

.storage {
  color: @soft-violet;
}

.constant {
  color: @soft-text-dark;

  &.character.escape {
    color: @soft-text-emphasis;
  }

  &.numeric {}

  &.other.color {
    color: @soft-text-emphasis;
  }

  &.other.symbol {}
}

.variable {
  /* color: lighten(@orange, 15%); */
  color: @purple;

  &.interpolation {
    color: darken(@orange, 25%);
  }

  &.parameter.function {
    color: @soft-red !important; // prevent parameter definition color from being overwritten by argument colors below
  }
}

.invalid.illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.string {
  color: @soft-text-dark;


  &.regexp {
    color: @soft-text-emphasis;

    .source.ruby.embedded {
      color: @orange;
    }
  }

  &.other.link {
    color: @red;
  }
}
// .syntax--string.syntax--begin, .syntax--string.syntax--end {
//   color: #fff !important;
//   font-weight: 900;
//   text-shadow:  0 1px 0 @soft-text-dark,
//                 0 0 1px @soft-text-dark,
//                 0 0 1px @soft-text-dark,
//                 0 0 1px @soft-text-dark;
// }
// .syntax--string.syntax--begin, .syntax--string.syntax--end {
//   color: fade(@soft-text-dark, 65%) !important;
//   font-weight: 900;
//   .value-shadow();
// }
.syntax--string.syntax--begin, .syntax--string.syntax--end {
  // color: fade(@soft-text-dark, 65%) !important;
  // -webkit-text-stroke: 1px white;
  color: fade(@soft-text-dark, 80%) !important;
  font-weight: 900;
  // .value-shadow();
  text-shadow:
   -1px -1px 0 #fff,
    1px -1px 0 #fff,
    -1px 1px 0 #fff,
     1px 1px 0 #fff,
     2px 2px 0 fade(@soft-text-dark, 5%),
     2px 2px 0 fade(@soft-text-dark, 5%);
}
.syntax--unit {
  color: @soft-hot-pink;
  font-weight: 500;
  // .value-shadow();
}

.punctuation {
  color: @soft-text-faded !important;
  &.definition {
    &.comment {
      color: @light-gray;
    }

    &.string,
    &.variable,
    &.parameters,
    &.array {
      color: @soft-red;
    }

    &.heading,
    &.identity {
      color: @cyan;
    }

    &.bold {
      color: @morado;
      font-style: bold;
    }

    &.italic {
      color: @tags;
      font-style: italic;
    }
  }

  &.section.embedded {
    color: darken(@red, 10%);
  }

}

.support {
  &.class {
    color: @morado;
  }

  &.function  {
    color: @soft-green;

    &.any-method {
      color: @tags;
    }
  }
}

// arrow function declaration
.syntax--arrow {
  color: @soft-green;
}

// targets the word "function" when declaring a function
.syntax--type.syntax--function.syntax--js:not(.syntax--arrow) {
  font-style: italic;
  color: #98c4ba;
}

.entity {
  &.name.function {
    color: @soft-green;
  }

  &.name.class, &.name.type.class {
    color: @soft-purple-darker;
  }

  &.name.section {
    color: @yellow;
  }

  &.name.tag {
    color: @tags;
  }

  &.other.attribute-name {
    color: @soft-text-emphasis;

    &.id {
      color: @yellow;
    }
  }
}

.meta {
  &.class {
    color: @morado;
  }

  &.link {
    color: @orange;
  }

  &.require {
    color: @yellow;
  }

  &.selector {
    color: @tags;
  }

  &.separator {
    background-color: @gray;
    color: @soft-text;
  }
}

.none {
  color: @soft-text;
}

.markup {
  &.bold {
    color: @orange;
    font-style: bold;
  }

  &.changed {
    color: @tags;
  }

  &.deleted {
    color: @red;
  }

  &.italic {
    color: @purple;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    color: @cyan;
  }

  &.inserted {
    color: @yellow;
  }

  &.list {
    color: @orange;
  }

  &.quote {
    color: @red;
  }

  &.raw.inline {
    color: @yellow;
  }
}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @yellow;
  }
}

.atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}

.syntax--property {
  color: @soft-violet;
}

//this, super, etc:
// .variable.language.js
.variable.language {
  font-weight: 500;
  color: @soft-purple-default;
}


.syntax--todo,
.syntax--question,
.syntax--note,
.syntax--fixme,
.syntax--changed,
.syntax--xxx,
.syntax--idea,
.syntax--hack,
.syntax--review,
.syntax--xxx
 {
  color: @soft-orange;
}

.bracket-matcher.region {
  border: 1px solid #fff;
  border-radius: 5px;
  background: #fff !important;
  z-index: 1000000;
  box-sizing: content-box;
  padding: 4px;
  box-shadow:
    0px 1px 0px rgba(168,164,190,.35),
    1px 0px 0px rgba(168,164,190,.35),
    0px -1px 0px rgba(168,164,190,.35),
    -1px 0px 0px rgba(168,164,190,.35);
}


// otherwise unstyled text passed as arguments,
.syntax--variable.syntax--parameter.syntax--function.syntax--js,
atom-text-editor::shadow .meta.arguments.js,
.syntax--parameter,
.syntax--function.syntax--parameter,
.syntax--variable.syntax--parameter.syntax--function
{
  color: @soft-salmon;
  // color: @soft-red;
  color: @soft-red-faded;
  // color: @soft-red-faded !important;
}
// punctuation for things passed as arguments
.syntax--variable.syntax--parameter.syntax--function.syntax--js .syntax--brace,
atom-text-editor::shadow .meta.arguments.js .syntax--brace,
.syntax--parameter .syntax--brace,
.syntax--arguments .syntax--punctuation,
.syntax--function.syntax--parameter .syntax--brace,
.syntax--variable.syntax--parameter.syntax--function .syntax--brace
{
  color: @soft-salmon;
  color: @soft-red-faded;
}

// targets the curly braces of an empty js object being passed as an arguments
.syntax--arguments .syntax--punctuation:not(.syntax--definition) {
  color: @soft-salmon !important;
  color: @soft-red-faded !important;
}
